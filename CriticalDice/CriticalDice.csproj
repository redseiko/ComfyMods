<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="Current" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{B787459D-F732-4D28-99F8-26AF265F13DA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>CriticalDice</RootNamespace>
    <AssemblyName>CriticalDice</AssemblyName>
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <LangVersion>12</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Deterministic>true</Deterministic>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <Choose>
    <When Condition="($(OS) == 'Unix' OR $(OS) == 'OSX') AND $(GamePath) == ''">
      <PropertyGroup>
        <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/.steam/steam/steamapps/common/Valheim dedicated server</GamePath>
        <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/Library/Application Support/Steam/steamapps/common/Valheim dedicated server/Contents/MacOS</GamePath>
      </PropertyGroup>
    </When>
    <When Condition="($(OS) == 'Windows_NT') AND $(GamePath) == ''">
      <PropertyGroup>
        <GamePath Condition="!Exists('$(GamePath)')">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 896660', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GamePath>
        <_SteamLibraryPath>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\SOFTWARE\Valve\Steam', 'SteamPath', null, RegistryView.Registry32))</_SteamLibraryPath>
        <GamePath Condition="!Exists('$(GamePath)') AND '$(_SteamLibraryPath)' != ''">$(_SteamLibraryPath)\steamapps\common\Valheim dedicated server</GamePath>
        <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files\Steam\steamapps\common\Valheim dedicated server</GamePath>
        <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files (x86)\Steam\steamapps\common\Valheim dedicated server</GamePath>
      </PropertyGroup>
    </When>
  </Choose>
  <ItemGroup>
    <Reference Include="0Harmony">
      <HintPath>$(GamePath)\BepInEx\core\0Harmony.dll</HintPath>
    </Reference>
    <Reference Include="assembly_guiutils_publicized">
      <HintPath>$(GamePath)\valheim_server_Data\Managed\publicized_assemblies\assembly_guiutils_publicized.dll</HintPath>
    </Reference>
    <Reference Include="assembly_utils_publicized">
      <HintPath>$(GamePath)\valheim_server_Data\Managed\publicized_assemblies\assembly_utils_publicized.dll</HintPath>
    </Reference>
    <Reference Include="assembly_valheim_publicized">
      <HintPath>$(GamePath)\valheim_server_Data\Managed\publicized_assemblies\assembly_valheim_publicized.dll</HintPath>
    </Reference>
    <Reference Include="BepInEx">
      <HintPath>$(GamePath)\BepInEx\core\BepInEx.dll</HintPath>
    </Reference>
    <Reference Include="com.rlabrecque.steamworks.net">
      <HintPath>$(GamePath)\valheim_server_Data\Managed\publicized_assemblies\com.rlabrecque.steamworks.net_publicized.dll</HintPath>
    </Reference>
    <Reference Include="Splatform_publicized">
      <HintPath>$(GamePath)\valheim_server_Data\Managed\publicized_assemblies\Splatform_publicized.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="UnityEngine">
      <HintPath>$(GamePath)\valheim_server_Data\Managed\UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.CoreModule">
      <HintPath>$(GamePath)\valheim_server_Data\Managed\UnityEngine.CoreModule.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Core\Handlers\SayHandler.cs" />
    <Compile Include="CriticalDice.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\BetterZeeRouter\BetterZeeRouter.csproj">
      <Project>{9c6d4066-3727-4589-b0ae-3dfc0248d088}</Project>
      <Name>BetterZeeRouter</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="manifest.json" />
    <None Include="CHANGELOG.md" />
    <None Include="README.md" />
    <None Include="icon.png" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="GetAssemblyVersion" AfterTargets="Build">
    <GetAssemblyIdentity AssemblyFiles="$(TargetPath)">
      <Output TaskParameter="Assemblies" ItemName="Targets" />
    </GetAssemblyIdentity>
    <ItemGroup>
      <AssemblyVersions Include="@(Targets->'%(Version)')" />
    </ItemGroup>
    <PropertyGroup>
      <AssemblyVersion>%(AssemblyVersions.Identity)</AssemblyVersion>
      <Major>$(AssemblyVersion.Split('.')[0])</Major>
      <Minor>$(AssemblyVersion.Split('.')[1])</Minor>
      <Patch>$(AssemblyVersion.Split('.')[2])</Patch>
      <PackageName>$(AssemblyName)_v$(Major).$(Minor).$(Patch)</PackageName>
      <PackageDir>$(OutDir)$(PackageName)</PackageDir>
    </PropertyGroup>
  </Target>
  <Target Name="MakeThunderstorePackage" AfterTargets="GetAssemblyVersion">
    <ItemGroup>
      <PackageFiles Include="$(TargetDir)$(AssemblyName).dll; CHANGELOG.md; README.md; manifest.json; icon.png" />
    </ItemGroup>
    <MakeDir Directories="$(PackageDir)" />
    <Copy SourceFiles="@(PackageFiles)" DestinationFolder="$(PackageDir)" />
    <ZipDirectory SourceDirectory="$(PackageDir)" DestinationFile="$(OutDir)$(PackageName).zip" Overwrite="true" />
    <RemoveDir Directories="$(PackageDir)" />
  </Target>
</Project>